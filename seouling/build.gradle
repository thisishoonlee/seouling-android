buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.target_sdk
    defaultConfig {
        applicationId "mobile.seouling.com"
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        // To export db schema for Room database
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(":base-android")
    implementation project(':design')
    implementation project(':imaging')
    implementation project(':custom-view')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    implementation 'androidx.paging:paging-runtime:2.0.0-beta01'
    implementation "androidx.paging:paging-rxjava2:2.0.0-beta01"

    // FABRIC
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') { transitive = true }
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.airbnb.android:lottie:2.7.0'

    implementation 'com.facebook.android:audience-network-sdk:4.99.0'
    implementation 'com.facebook.android:facebook-login:4.38.1'
    implementation 'com.facebook.android:facebook-applinks:4.38.1'
    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.1'
    implementation 'com.squareup:otto:1.3.8'
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    implementation 'com.facebook.android:facebook-login:[5,6)'

    // for Room
    implementation "androidx.room:room-runtime:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"
    implementation "androidx.room:room-rxjava2:${versions.room}"
    testImplementation "androidx.room:room-testing:${versions.room}"

    // DEPENDENCIES FOR TEST
    androidTestImplementation "androidx.annotation:annotation:${versions.android_support}"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.22.0'
    testImplementation 'io.mockk:mockk:1.8.7'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"
    testImplementation "org.jetbrains.kotlin:kotlin-test:${versions.kotlin}"
}
